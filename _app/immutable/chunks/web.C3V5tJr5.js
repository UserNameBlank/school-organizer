var g=Object.defineProperty;var y=(i,n,e)=>n in i?g(i,n,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[n]=e;var b=(i,n,e)=>y(i,typeof n!="symbol"?n+"":n,e);import{W as k}from"./Icon.Or52Z2gw.js";function S(i){return btoa(new Uint8Array(i).reduce((n,e)=>n+String.fromCharCode(e),""))}class A extends k{constructor(){super();b(this,"idCounter",0);b(this,"subjects",new Map);b(this,"timetable",new Array(12*5).fill(null));const e=window.localStorage.getItem("content");e&&this.importFromStorage(e)}importFromStorage(e){const t=JSON.parse(e);console.log(t);const r=t.subjects;for(const o of r)this.subjects.set(o.id,o);this.timetable=t.timetable,this.idCounter=t.idCounter}exportToStorage(){const e={subjects:Array.from(this.subjects).map(([r,o])=>o),timetable:this.timetable,idCounter:this.idCounter},t=JSON.stringify(e);window.localStorage.setItem("content",t)}getSubjects(){return this.getSubjectsWithHomework()}async getSubjectsWithHomework(){return{subjects:Array.from(this.subjects).map(([e,t])=>t)}}async addSubject(e){return e.id=this.idCounter++,this.subjects.set(e.id,e),{id:e.id}}async removeSubject(e){this.subjects.delete(e.id)}async editSubject(e){this.subjects.set(e.id,e)}pickImage(){return new Promise(e=>{const t=document.createElement("input");t.type="file",t.accept="image/*",t.onchange=r=>{var a;const s=(a=r.target.files)==null?void 0:a[0];if(s){const l=new FileReader;l.readAsArrayBuffer(s),l.onload=async h=>{var d;const m=(d=h.target)==null?void 0:d.result,p="data:image/jpeg;base64,"+S(m),u=URL.createObjectURL(s);e({data:p,uri:u})}}t.remove()},t.click()})}async getHomeworks(){return{homeworks:Array.from(this.subjects).map(([e,t])=>t.homeworks).flat()}}async addHomework(e){return{id:this.idCounter++,image:e.image}}async removeHomework(e){this.subjects.forEach(t=>{t.homeworks=t.homeworks.filter(r=>r.id!==e.id)})}async removeOldHomework(){this.subjects.forEach(e=>{e.homeworks=e.homeworks.filter(t=>!(t.done&&(t.dueTo??1/0)<Date.now()))})}setHomeworkDone(e){return Promise.resolve()}async setTimetableSlot(e){this.timetable[e.id]=e.subjectId}async getTimetableSlots(){return{slots:this.timetable.filter(e=>e!=null).map((e,t)=>({id:t,subjectId:e}))}}async clearTimetableSlot(e){this.timetable[e.id]=null}setNotificationOptions(e){throw new Error("Method not implemented.")}async exportContent(){const e={subjects:Array.from(this.subjects).map(([o,s])=>s),timetable:this.timetable},t=JSON.stringify(e,null,2),r=new Blob([t],{type:"application/json"});if(window.showSaveFilePicker)await(await window.showSaveFilePicker({suggestedName:"content.json",types:[{description:"json file",accept:{"text/plain":[".json"]}}]})).createWritable().write([r]);else{let o=URL.createObjectURL(r),s=document.createElement("a");s.href=o,s.download="content.json",s.click(),URL.revokeObjectURL(o),s.remove()}}async importContent(){const e=document.createElement("input");e.type="file",e.accept=".json",e.onchange=t=>{var s;const o=(s=t.target.files)==null?void 0:s[0];if(o){const a=new FileReader;a.readAsText(o,"UTF-8"),a.onload=async l=>{var f;const h=(f=l.target)==null?void 0:f.result,m=JSON.parse(h),p=m.subjects,u=new Map;for(const c of p){const j=c.id,{id:w}=await this.addSubject({...c,homeworks:[]});u.set(j,w)}const d=m.timetable;this.timetable=d.map(c=>c?u.get(c):null),this.notifyListeners("contentImported",null)}}e.remove()},e.click()}}export{A as DatabaseWeb};
